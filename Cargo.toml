[package]
name = "first-try"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["cdylib","rlib"]

[dependencies]
cosmwasm-std ={ version = "1.0.0-beta8",features = ["staking"]}
serde = { version = "1.0.103", default-features = false, features = ["derive"] }
cw-storage-plus = "0.13.4"
thiserror = "1"
schemars = "0.8.1"
cw-utils = "0.13"
cosmwasm-schema ={ version = "1.0.0"}


[dev-dependencies]
cw-multi-test = "0.13.4"

# Since we added the "rlib" target for the contract, it is, as mentioned before, useable as a dependency. The problem is that the contract depended on ours would have Wasm entry points generated twice - once in the dependency and once in the final contract. We can work this around by disabling generating Wasm entry points for the contract if the crate is used as a dependency. We would use feature flags for that.
[features]
library = []

# Since now to add this contract as a dependency, don't forget to enable the feature like this when using as a dependency ofc:
#[dependencies]
# my_contract = { version = "0.1", features = ["library"] }
